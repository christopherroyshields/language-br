".source.br":
  "fnReadLayoutArrays(LayoutName$*255,&Prefix$;mat SSubs$,mat NSubs$)":
    "prefix": "fnReadLayoutArrays",
    "body" : """
      dim S_${1:StringSubs}Subs$(1), N_${1:NumericSubs}Subs$(1), ${1:File}Prefix$
      fnReadLayoutArrays(\"${1:layout}\",${1:&prefix}Prefix$,mat S_${1:StringSubs}Subs$,mat N_${1:NumericSubs}Subs$)
      $0
    """,
    "description": """
    Reads the file layout and returns the Record Detail information in a bunch of arrays. Returns the field count.

    fnReadLayoutArrays(filelay$,&prefix$;mat SSubs$, mat NSubs$, mat SSpec$, mat NSpec$,mat SDescription$, mat NDescription$,Mat Spos,Mat Npos)

      filelay$ - the name of the layout to read
      prefix$ - the return value for the prefix for the file
      mat SSubs$ - the return value for all the string subscripts in the layout
      mat NSubs$ - the return value for the numeric subscripts in the lay

    Code Snippet:
      dim S_FileNameSubs$, N_FileNameSubs$, FileNamePrefix$
      fnReadLayoutArrays(\"FileName\",FileNamePrefix$,mat S_FileNameSubs$,mat N_FileNameSubs$)

    See the online documentation for a full description of all parameters.
    """,
    "descriptionMoreURL": "http://brwiki2.brulescorp.com/index.php?title=FileIO_Library#fnReadLayoutArrays",
    "leftLabel": "Code Snippet"

  "fnReadLayoutArrays(LayoutName$*255,&Prefix$;mat SSubs$,mat NSubs$,mat SSpec$, ...)":
    "prefix": "fnReadLayoutArraysFull",
    "body" : """
      dim ${1:StringSubs}_S_Subs$(1), ${1:NumericSubs}_N_Subs$(1), ${1:File}_Prefix$
      dim ${1:StringSpec}_S_Spec$(1), ${1:NumericSpec}_N_Spec$(1)
      dim ${1:StringDescription}_S_Description$(1), ${1:NumericDescription}_N_Description$(1)
      dim ${1:StringPos}_S_Pos(1), mat ${1:NumericPos}_N_Pos(1)

      fnReadLayoutArrays(\"${1:layout}\",${1:&prefix}_Prefix$,mat ${1:StringSpec}_S_Spec$, mat ${1:NumericSpec}_N_Spec$,mat ${1:StringDescription}_S_Description$, mat ${1:NumericDescription}_N_Description$,mat ${1:StringPos}_S_Pos(1), mat ${1:NumericPos}_N_Pos
      $0
    """,
    "description": """
    Reads the file layout and returns the Record Detail information in a bunch of arrays. Returns the field count.

      fnReadLayoutArrays(filelay$,&prefix$;mat SSubs$, mat NSubs$, mat SSpec$, mat NSpec$,mat SDescription$, mat NDescription$,Mat Spos,Mat Npos)

      filelay$ - the name of the layout to read
      prefix$ - the return value for the prefix for the file
      mat SSubs$ - the return value for all the string subscripts in the layout
      mat NSubs$ - the return value for the numeric subscripts in the layout

    Code Snippet:
      let dim FileName_S_Subs$(1), FileName_N_Subs$(1), FileName_Prefix$
      dim FileName_S_Spec$(1), FileName_N_Spec$(1)
      dim FileName_S_Description$(1), FileName_N_Description$(1)
      dim FileName_S_Pos(1), mat FileName_N_Pos(1)

      fnReadLayoutArrays("FileName",FileName_Prefix$,mat FileName_S_Spec$, mat FileName_N_Spec$,mat FileName_S_Description$, mat FileName_N_Description$,mat FileName_S_Pos(1), mat FileName_N_Pos

    See the online documentation for a full description of all parameters.
    """,
    "descriptionMoreURL": "http://brwiki2.brulescorp.com/index.php?title=FileIO_Library#fnReadLayoutArrays",
    "leftLabel": "Code Snippet"

  "fnMakeSubProc(FileName$*255;mat Subs$,mat F$,mat F)":
    "prefix": "fnMakeSubProc",
    "body" : """
      dim Subscripts$(1)*1023

      fnMakeSubProc(\"${1:layout}\",mat Subscripts$,mat ${1:layout}$,mat ${1:layout})
      for ${2:Index}=1 to udim(mat Subscripts$)
         execute Subscripts$(${2:Index})
      next ${2:Index}
      $0
    """,
    "description": """
    Sets the subscripts for a data file.

    fnMakeSubProc(filelay$;mat Subscripts$)

      FileLay$ - The name of the file layout from which to read the subscripts.
      mat Subscripts$ - If you give this optional array, fnMakeSubProc passes the subscripts back in this array rather then in the subs.$$$ file.

    Code Snippet:
      fnMakeSubProc("DataFile",mat Subscripts$,mat DataFile$,mat DataFile)
      for Index=1 to udim(mat Subscripts$)
         execute Subscripts$(Index)
      next Index
    """,
    "descriptionMoreURL": "http://brwiki2.brulescorp.com/index.php?title=FileIO_Library#fnMakeSubProc",
    "leftLabel": "Code Snippet"

  "fnReadLayouts(mat LayoutList$) with Dims":
    "prefix": "fnReadLayouts",
    "body" : """
      dim ${1:LayoutList}$(1)
      fnReadLayouts(mat ${1:LayoutList}$)
      $0
    """,
    "description": """
    Reads the list of file layouts into the provided array.

    FnReadLayouts(mat Dirlist$)

      Mat Dirlist$ - After running the function, mat Dirlist$ will contain a list of all the file layouts that FileIO can find.

    Code Snippet:
      dim LayoutList$(1)
      fnReadLayouts(mat LayoutList$)
    """,
    "descriptionMoreURL": "http://brwiki2.brulescorp.com/index.php?title=FileIO_Library#fnReadLayouts",
    "leftLabel": "Code Snippet"

  "open #(FileHandle:=fnGetFileNumber)":
    "prefix": "openNumber",
    "body" : "open #(${1:filehandle}:=fnGetFileNumber): $0",
    "description": """
    Snippet to open a non-FileIO file using fnGetFileNumber to find a free file number.

    Open #(FileHandle:=fnGetFileNumber(;Start,Count)): "Open String", Open Type

      FileHandle - this will be assigned the File Handle of the newly opened file.
      Start – Which Number to start looking from. Defaults to 1.
      Count - How many file numbers to find in a row. fnGetFileNumber will search for a gap of at least this many unused numbers in a row.
      Open String - the BR Open text for the file or window you're trying to open.
      Open Type - flags such as Input/Output, Relative, Keyed, Display, etc that indicate what kind of file it is.
    """,
    "descriptionMoreURL": "http://brwiki2.brulescorp.com/index.php?title=Open_(disambiguation)",
    "leftLabel": "Code Snippet"

  "fnOpen(LayoutName$, Mat F$, Mat F, Mat Form$; Input, KeyNum) with Dims":
    "prefix": "fnOpenDims",
    "body": """
      dim ${1:layout}, ${1:layout}$(1)*${2:1024}, ${1:layout}(1)
      let ${1:layout}=fnOpen(\"${1:layout}\",mat ${1:layout}$,mat ${1:layout},mat form$)
    """,
    "description": """
    Opens file using Fileio, returning the file handle, and Dimming the necessary Variables.

    fnOpen(Filename$*255, Mat F$, Mat F, Mat Form$; Inputonly, Keynum, DontSortSubs, Path$*255, Mat Descr$, Mat FieldWidths, SupressPrompt, IgnoreErrors, SuppressLog)

      FileName$ - The filename of the file layout for the file you’re reading.
      MAT F$ - The array that will be used to hold the string data for the file.
      MAT F – The array that will hold the numeric data for the file.
      MAT Form$ - An array of form statements.
      InputOnly – 1 means open for input only.

      See the online documentation for a complete description of all optional parameters.

    Code Snippet:
      dim layout, layout$(1)*longest,layout(1)
      let layout=fnOpen("layout",mat layout$,mat layout,mat form$)
    """,
    "descriptionMoreURL": "http://brwiki2.brulescorp.com/index.php?title=FileIO_Library#fnOpen",
    "leftLabel": "Code Snippet"

  "fnOpen() ... Read Loop":
    "prefix": "fnOpenReadLoop",
    "body": """
      dim ${1:layout}, ${1:layout}$(1)*${2:1024},${1:layout}(1)

      let ${1:layout}=fnopen(\"${1:layout}\",mat ${1:layout}$,mat ${1:layout},mat form$,1)
      restore #${1:layout}: error IGNORE
      do until File(${1:layout})
         read #${1:layout}, using Form$(${1:layout}) : Mat ${1:layout}$,Mat ${1:layout} eof IGNORE
         if File(${1:layout})=0 then
            ${3:}
         end if
      loop
      close #${1:layout}:
    """,
    "description": """
    Opens file using Fileio and reads all records of the file in a loop.

    Layout$ - the name of the layout you're trying to read. The snippet does the rest.

  Code Snippet:
    dim layout, layout$(1)*1024,layout(1)

    let layout=fnopen("layout",mat layout$,mat layout,mat form$,1)
    restore #layout: error IGNORE
    do until File(layout)
       read #layout, using Form$(layout) : Mat layout$,Mat layout eof IGNORE
       if File(layout)=0 then

       end if
    loop
    close #layout:
    """,
    "descriptionMoreURL": "http://brwiki2.brulescorp.com/index.php?title=FileIO_Library",
    "leftLabel": "Code Snippet"

  "fnOpen() ... Read By Key":
    "prefix": "fnOpenReadLoopKey",
    "body": """
      dim ${1:layout}, ${1:layout}$(1)*${2:1024},${1:layout}(1)
      let ${1:layout}=fnopen(\"${1:layout}\",mat ${1:layout}$,mat ${1:layout},mat form$)
      restore #${1:layout}>=${1:layout}key$: error IGNORE
      do until File(${1:layout})
         read #${1:layout}, using Form$(${1:layout}) : Mat ${1:layout}$,Mat ${1:layout} eof IGNORE
         let ${1:layout}rec_key$ = fnBuildKey$(\"${1:layout}\",mat ${1:layout}$,mat ${1:layout})
         if File(${1:layout})=0 and ${1:layout}rec_key$ == ${1:layout}key$ then
            ${3:}
         end if
      loop
      close #${1:layout}:
    """,
    "description": """
    Opens file using Fileio and reads all records of the file in a loop.

    Layout$ - the name of the layout you're trying to read. The snippet does the rest.

  Code Snippet:
    dim layout, layout$(1)*1024,layout(1)

    let layout=fnopen("layout",mat layout$,mat layout,mat form$,1)
    restore #layout: error IGNORE
    do until File(layout)
       read #layout, using Form$(layout) : Mat layout$,Mat layout eof IGNORE
       if File(layout)=0 then

       end if
    loop
    close #layout:
    """,
    "descriptionMoreURL": "http://brwiki2.brulescorp.com/index.php?title=FileIO_Library",
    "leftLabel": "Code Snippet"

  "fnOpen() ... Read One":
    "prefix": "fnOpenReadOne",
    "body": """
      dim ${1:layout}, ${1:layout}$(1)*${2:1024},${1:layout}(1)
      let ${1:layout}=fnopen(\"${1:layout}\",mat ${1:layout}$,mat ${1:layout},mat form$,1)
      read #${1:layout}, using Form$(${1:layout}), key=${1:layout}key$ : Mat ${1:layout}$,Mat ${1:layout}
      close #${1:layout}:
    """,
    "description": """
    Opens file and reads the given record by Key

    Layout$ - the name of the layout you're trying to read. The snippet does the rest.

  Code Snippet:
    dim layout, layout$(1)*1024,layout(1)
    let layout=fnopen("layout",mat layout$,mat layout,mat form$,1)
    read #layout, using Form$(layout), key=layoutkey$ : Mat layout$,Mat layout
    close #layout:
    """,
    "descriptionMoreURL": "http://brwiki2.brulescorp.com/index.php?title=FileIO_Library",
    "leftLabel": "Code Snippet"

  "FileIO Open Function":
    "prefix": "openfn",
    "body": """
      dim LinkageEstablished
      def fnEstablishLinkage
         if ~LinkageEstablished then
            library "fileio" : fnOpenFile,Fnclosefile,Fngetfilenumber,Fnkey$,FnBuildKey$,Fnreadlayoutarrays,Fndoeslayoutexist,Fnreadallkeys,fnReadRelativeDescription$,fnReadRelUnopenedDescription$,fnReadRelUnopenedNumber,fnUpdateFile,fnLog,fnLogArray,fnErrLog,fnReadLayouts,Fnmakeuniquekey$,FnDisplayLength,FnLength,FnReadDescription$,FnReadUnopenedDescription$,fnReadRecordWhere$,fnUniqueKey,fnReadNumber,fnReadUnopenedNumber,fnReadRelativeNumber,fnNotInFile,fnDataCrawler,fnDataEdit
            library "fileio" : fnMakeSubProc,fnReadMatchingKeys,fnReadAllNewKeys,fnReadFilterKeys,fnReadEntireLayout,fnReadLayoutHeader,fnReadSubs,fnReadLayoutPath$,fnReadKeyFiles, fnAskCombo$,fnRunProcFile,fnBuildProcFile,fnDataShow
            library "screenio" : fnCallScreen$,fnFindSubscript,fnFm$,fnfm,fnDisplayScreen,fnGetUniqueName$,fnIsInputSpec,fnIsOutputSpec,fnDays,fnBR42
            let linkageEstablished=1
         end if
      fnend
      !
      ! #Autonumber# 99000,10
      OPEN: ! ***** Function To Call Library Openfile And Proc Subs
           def Fnopen(Filename$*255, Mat F$, Mat F, Mat Form$; Inputonly, Keynum, Dont_Sort_Subs, Path$*255, Mat Descr$, Mat Field_Widths,Supress_Prompt,Ignore_Errors,___,Index)
              dim _FileIOSubs$(1)*800, _Loadedsubs$(1)*80
              let Fnopen=Fnopenfile(Filename$, Mat F$, Mat F, Mat Form$, Inputonly, Keynum, Dont_Sort_Subs, Path$, Mat Descr$, Mat Field_Widths, Mat _FileIOSubs$, Supress_Prompt,Ignore_Errors,Program$)
              if Srch(_Loadedsubs$,Uprc$(Filename$))<=0 then : mat _Loadedsubs$(Udim(_Loadedsubs$)+1) : let _Loadedsubs$(Udim(_Loadedsubs$))=Uprc$(Filename$) : for Index=1 to Udim(Mat _Fileiosubs$) : execute (_Fileiosubs$(Index)) : next Index
           fnend

      Ignore: Continue
    """,
    "description": """
    The standard fnOpenFile function that needs to be included in all your programs when using FileIO.

    This function needs to be pasted at the bottom of any of your standard programs or libraries that use FileIO functions. It does not need to be included in ScreenIO functions, as ScreenIO does that for you.
    """,
    "descriptionMoreURL": "http://brwiki2.brulescorp.com/index.php?title=FileIO_Library#fnOpen_Function",
    "leftLabel": "Code Snippet"

  "fnOpen() ... Write":
    "displayText" : "fnOpen() ... Write"
    "prefix": "fnOpenWrite",
    "body": """
       ! FileIO Dimensions
       dim Form$(1)*255
       dim ${1:layout}, ${1:layout}$(1)*256,${1:layout}(1)

       ! Open the file
       let ${1:layout}=Fnopen("${1:layout}",Mat ${1:layout}$,Mat ${1:layout},Mat Form$)

       ! Set Values
       let ${1:layout}$(${2:subscript})=${3:}

       ! Save The Record
       write #${1:layout}, using Form$(${1:layout}) : Mat ${1:layout}$,Mat ${1:layout}

       ! Close DataFile
       let fnCloseFile(${1:layout},"${1:layout}")
    """,
    "description": """
    Opens a file and updates a record, then closes it.

    Layout$ - the name of the layout you're trying to read.
    Prefix_ - The Prefix for the given layout for the field you're trying to set.
    Subscript - the Subscript for the field you're trying to set

    The snippet does the rest.

  Code Snippet:
    ! FileIO Dimensions
    dim Form$(1)*255
    dim layout, layout$(1)*256,layout(1)

    ! Open the file
    let layout=Fnopen("layout",Mat layout$,Mat layout,Mat Form$)

    ! Set Values
    let layout$(prefix_subscript)=
    let layout$(prefix_subscript)=

    ! Save The Record
    write #layout, using Form$(layout) : Mat layout$,Mat layout

    ! Close DataFile
    let fnCloseFile(layout,"layout")
    """,
    "descriptionMoreURL": "http://brwiki2.brulescorp.com/index.php?title=FileIO_Library",
    "leftLabel": "Code Snippet"
